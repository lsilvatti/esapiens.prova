{"version":3,"sources":["components/user/styles.ts","components/user/repository/RepositoryContainer.tsx","components/common/styles.ts","components/common/Error.tsx","components/user/repository/RepositoryGrid.tsx","components/user/info/Picture.tsx","components/user/info/Info.tsx","components/search/styles.tsx","components/search/field.tsx","components/search/Button.tsx","components/search/Bar.tsx","services/adapter.ts","services/requests.ts","components/common/Loading.tsx","components/user/repository/RepositoryDetail.tsx","pages/Profile.tsx","pages/NotFound.tsx","pages/styles.ts","assets/img/logo.png","pages/Home.tsx","components/user/card/CardContainer.tsx","components/user/card/CardGrid.tsx","pages/Search.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["profilePictureStyles","createUseStyles","img","borderRadius","maxWidth","height","display","objectFit","repositoryDetailStyles","root","backgroundColor","flexDirection","padding","boxShadow","color","margin","link","textDecoration","fontWeight","alignSelf","marginTop","githubLink","fontSize","column","flexBasis","repositorySectionStyles","justifyContent","cursor","info","wordBreak","right","alignItems","stat","marginRight","userCardStyles","maxHeight","imgContainer","infoContainer","marginLeft","userInfoStyles","container","position","flexWrap","textAlign","marginBottom","repositoryGridClasses","wrapper","header","select","flexFlow","width","background","overflow","item","boxSizing","userGridClasses","pagination","displayNone","paglink","RepositoryContainer","props","repo","classes","style","to","owner","login","name","className","full_name","language","watchers_count","icon","faEye","stargazers_count","faStar","errorStyles","empty","minHeight","opacity","loadingStyles","ReturnError","message","faSadCry","size","RepositoryGrid","repositories","orders","function","a","b","localeCompare","useState","repoList","setRepoList","selectedOrder","setSelectedOrder","useEffect","sort","value","onChange","event","find","element","target","id","map","length","ProfilePic","url","src","alt","UserInfo","user","avatar_url","location","email","bio","followers","following","href","html_url","rel","searchBarStyles","searchFieldStyles","border","fontFamily","buttonStyles","SearchField","query","URLSearchParams","useLocation","search","fieldChange","setValue","get","placeholder","onKeyPress","e","key","window","assign","type","SearchButton","onClick","SearchBar","setSearch","text","data","Promise","resolve","reject","axios","method","then","response","error","getRepos","getRepoDetail","detail","Loading","RepositoryDetail","repoName","useParams","setRepo","languages","setLanguages","stargazers","setStargazers","getRepo","undefined","description","Object","keys","Profile","userId","setError","repos","setRepos","profile","setProfile","path","useRouteMatch","console","log","catch","exact","NotFound","homeStyles","Home","logo","CardContainer","UserGrid","users","count","currentPage","getTargetPage","userList","setUserList","pages","setPages","numberPages","Math","trunc","Search","setCount","loading","setLoading","currentUser","setCurrentUser","setCurrentPage","page","Number","param","searchUsers","resp","items","total_count","TargetPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAGaA,EAAuBC,YAAgB,CAChDC,IAAI,CACAC,aAAc,IACdC,SAAU,OACVC,OAAQ,OACRC,QAAQ,QACRC,UAAW,WAINC,EAAyBP,YAAgB,CAClDQ,KAAM,CACFH,QAAQ,OACRI,gBAAiB,OACjBC,cAAe,SACfC,QAAS,GACTC,UAAW,wCACXC,MAAO,QACPC,OAAQ,GACR,4BAA4B,CACxBX,SAAU,KACVW,OAAQ,cAGhBC,KAAK,CACDC,eAAgB,OAChBH,MAAO,UACPI,WAAY,MACZC,UAAW,SACXC,UAAW,IAEfC,WAAW,CACPJ,eAAgB,OAChBH,MAAO,UACPI,WAAY,MACZI,SAAU,QACVH,UAAW,UAEfI,OAAO,CACHC,UAAW,OACXT,OAAQ,WACR,4BAA4B,CACxBS,UAAW,UAMVC,EAA0BxB,YAAgB,CACnDQ,KAAM,CACFH,QAAQ,OACRI,gBAAiB,OACjBC,cAAe,MACfe,eAAgB,gBAChBd,QAAS,GACTC,UAAW,wCACXC,MAAO,QACPa,OAAQ,UACR,UAAU,CACNjB,gBAAgB,QAEpB,WAAW,CACPA,gBAAgB,SAGxBkB,KAAK,CACDtB,QAAS,OACTK,cAAe,SACfe,eAAgB,gBAChBG,UAAW,aAEfC,MAAM,CACFxB,QAAS,OACTK,cAAe,MACfe,eAAgB,aAChBK,WAAY,WACZ,QAAQ,CACJhB,OAAQ,aAGhBiB,KAAK,CACD1B,QAAQ,OACRyB,WAAY,SACZ,SAAU,CACNE,YAAa,MAKXC,EAAiBjC,YAAgB,CAC3CQ,KAAM,CACF0B,UAAW,GACX7B,QAAQ,OACRI,gBAAiB,OACjBC,cAAe,MACfe,eAAgB,aAChBd,QAAS,GACTC,UAAW,wCACXC,MAAO,QACPa,OAAQ,UACR,UAAU,CACNjB,gBAAgB,QAEpB,WAAW,CACPA,gBAAgB,SAGxB0B,aAAa,CACTD,UAAW,OACX/B,SAAU,IAGdiC,cAAc,CACVC,WAAY,GACZhC,QAAS,OACTK,cAAe,SACfe,eAAgB,YAIXa,EAAiBtC,YAAgB,CAC1CQ,KAAK,CACDC,gBAAiB,WAErB8B,UAAU,CACNlC,QAAQ,OACRM,QAAS,GACTR,SAAU,SACVW,OAAQ,SACR0B,SAAU,WACVV,WAAY,SACZW,SAAU,OACV5B,MAAO,QACP6B,UAAW,SACXjB,eAAgB,SAChB,2BAA2B,CACvBiB,UAAW,OACXjB,eAAe,eAGvBE,KAAK,CACDtB,QAAS,OACTK,cAAe,SACfoB,WAAY,gBACZO,WAAW,GACX,SAAS,CACLM,aAAc,KAGtBR,aAAa,CACThC,SAAU,IACV+B,UAAW,IACX,QAAS,CACL9B,OAAQ,SAGhBW,KAAK,CACDC,eAAgB,OAChBH,MAAO,UACPI,WAAY,SAIP2B,EAAwB5C,YAAgB,CACjD6C,QAAQ,CACJ1C,SAAU,SACVW,OAAQ,mBACRD,MAAO,QACP,OAAQ,CACJA,MAAO,QACP8B,aAAc,GACdN,WAAY,GACZ,2BAA2B,CACvBK,UAAW,YAIvBI,OAAO,CACHzC,QAAS,OACTK,cAAe,SACfe,eAAgB,SAChBK,WAAY,SACZ,4BAA4B,CACxBpB,cAAe,MACfe,eAAgB,gBAChBK,WAAY,WAGpBiB,OAAO,CACH,WAAW,CACPV,WAAW,KAGnBE,UAAU,CACNlC,QAAS,OACT2C,SAAU,WACVvB,eAAgB,aAChB,uBAAwB,CACpBwB,MAAO,MACP7C,OAAQ,OAEV,6BAA8B,CAC5B8C,WAAY,UACZhD,aAAc,QAEhB,mCAAoC,CAClCgD,WAAY,WAEd,6BAA8B,CAC5BA,WAAY,YACZhD,aAAc,QAEhB,2BAA2B,CACzBgC,UAAW,OACXiB,SAAU,gBAIlBC,KAAK,CACD7B,UAAW,OACX,WAAY,OACZZ,QAAS,OACT0C,UAAW,aACX,4BAA4B,CACxB9B,UAAW,UAEf,2BAA2B,CACvBA,UAAW,UAKV+B,EAAkBtD,YAAgB,CAC3C6C,QAAQ,CACJ1C,SAAU,SACVW,OAAQ,mBACRD,MAAO,QACP,OAAQ,CACJA,MAAO,QACP8B,aAAc,GACdN,WAAY,GACZ,2BAA2B,CACvBK,UAAW,YAIvBI,OAAO,CACHzC,QAAS,OACTK,cAAe,SACf,4BAA4B,CACxBe,eAAgB,gBAChBf,cAAe,OAEnBe,eAAgB,SAChBK,WAAY,UAEhBiB,OAAO,CACH,WAAW,CACPV,WAAW,KAGnBE,UAAU,CACNlC,QAAS,OACT2C,SAAU,WACVvB,eAAgB,aAChB,uBAAwB,CACpBwB,MAAO,MACP7C,OAAQ,OAEV,6BAA8B,CAC5B8C,WAAY,UACZhD,aAAc,QAEhB,mCAAoC,CAClCgD,WAAY,WAEd,6BAA8B,CAC5BA,WAAY,YACZhD,aAAc,QAEhB,2BAA2B,CACzBgC,UAAW,OACXiB,SAAU,gBAIlBC,KAAK,CACD7B,UAAW,OACX,WAAY,OACZZ,QAAS,OACT0C,UAAW,aACXJ,MAAO,OACP,4BAA4B,CACxB1B,UAAW,UAEf,2BAA2B,CACvBA,UAAW,QAGnBgC,WAAW,CACPlD,QAAQ,QAEZmD,YAAY,CACRnD,QAAS,QAEboD,QAAQ,CACJpD,QAAS,QACTqB,OAAQ,UACRZ,OAAQ,a,eC7SD,SAAS4C,EAAoBC,GACxC,IAAQC,EAASD,EAATC,KACFC,EAAUrC,IAEhB,OACI,cAAC,IAAD,CAAMsC,MAAO,CAAC9C,eAAgB,QAAS+C,GAAE,gBAAWH,EAAKI,MAAMC,MAAtB,YAA+BL,EAAKM,KAApC,KAAzC,SACC,sBAAMC,UAAWN,EAAQrD,KAAzB,UACG,sBAAK2D,UAAWN,EAAQlC,KAAxB,UACI,6BAAKiC,EAAKM,OACV,gCACA,6BAAKN,EAAKQ,YACV,6BAAKR,EAAKS,iBAId,sBAAKF,UAAWN,EAAQhC,MAAxB,UACI,sBAAKsC,UAAWN,EAAQ9B,KAAxB,UACI,+BAAO6B,EAAKU,iBACZ,cAAC,IAAD,CAAiBC,KAAMC,SAE3B,sBAAKL,UAAWN,EAAQ9B,KAAxB,UACI,+BAAO6B,EAAKa,mBACZ,cAAC,IAAD,CAAiBF,KAAMG,iBC9BpC,IAAMC,EAAc3E,YAAgB,CAEvC4E,MAAM,CACFvE,QAAS,OACTK,cAAe,SACfgC,UAAW,SACXmC,UAAW,QACX/C,WAAY,SACZL,eAAgB,SAChBZ,MAAO,QACP,QAAS,CACLiE,QAAS,IAEb,SAAS,CACL3D,UAAW,GACX2D,QAAS,OAKRC,EAAgB/E,YAAgB,CACzCQ,KAAK,CACDyC,MAAO,OACP7C,OAAQ,OACRC,QAAS,OACToB,eAAgB,SAChBK,WAAY,YCpBL,SAASkD,EAAYrB,GAEhC,IAAQsB,EAAYtB,EAAZsB,QACFpB,EAAUc,IAEhB,OACI,sBAAKR,UAAWN,EAAQe,MAAxB,UACM,cAAC,IAAD,CAAiBL,KAAMW,IAAUC,KAAK,OACtC,+BAAOF,OCLN,SAASG,EAAezB,GACnC,IAAQ0B,EAAiB1B,EAAjB0B,aACFC,EAAS,CACX,CACIpB,KAAM,mBACNqB,SAAU,SAACC,EAAeC,GAAoB,OAAOA,EAAEhB,iBAAmBe,EAAEf,mBAEhF,CACIP,KAAM,oBACNqB,SAAU,SAACC,EAAeC,GAAoB,OAAOD,EAAEf,iBAAmBgB,EAAEhB,mBAEhF,CACIP,KAAM,kBACNqB,SAAU,SAACC,EAAeC,GAAoB,OAAOA,EAAEhB,iBAAmBe,EAAEf,mBAEhF,CACIP,KAAM,mBACNqB,SAAU,SAACC,EAAeC,GAAoB,OAAOD,EAAEf,iBAAmBgB,EAAEhB,mBAEhF,CACIP,KAAM,OACNqB,SAAU,SAACC,EAAeC,GAAoB,OAAOD,EAAEtB,KAAKwB,cAAcD,EAAEvB,SAKpF,EAAgCyB,mBAAuB,IAAvD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0CF,mBAASL,EAAO,GAAGpB,MAA7D,mBAAO4B,EAAP,KAAsBC,EAAtB,KACMlC,EAAUjB,IAWhB,OAJAoD,qBAAU,WACNH,EAAYR,EAAaY,MAAK,SAAUT,EAAGC,GAAK,OAAOA,EAAEhB,iBAAmBe,EAAEf,uBAC/E,CAACY,IAGA,sBAAKlB,UAAWN,EAAQhB,QAAxB,UACI,sBAAKsB,UAAWN,EAAQf,OAAxB,UACI,iDACA,sBAAKqB,UAAWN,EAAQd,OAAxB,0BACI,wBAAQmB,KAAK,UAAUgC,MAAOJ,EAAeK,SAdxC,SAACC,GAAiD,IAAD,EAClEP,EAAYR,EAAaY,KAAb,UAAkBX,EAAOe,MAAK,SAAAC,GAAO,OAAIA,EAAQpC,OAASkC,EAAMG,OAAOL,gBAAvE,aAAkB,EAA6DX,WAC3FQ,EAAiBK,EAAMG,OAAOL,QAYmDM,GAAG,UAAxE,SACKlB,EAAOmB,KAAI,SAACrD,GACb,OACI,wBAAwB8C,MAAO9C,EAAKc,KAApC,SAA2Cd,EAAKc,MAAnCd,EAAKc,iBAKb,IAApB0B,EAASc,OACN,cAAC1B,EAAD,CAAaC,QAAQ,+CAErB,qBAAKd,UAAWN,EAAQtB,UAAxB,SACKqD,EAASa,KAAI,SAAA7C,GACV,OACI,qBAAmBO,UAAWN,EAAQT,KAAtC,SACI,cAACM,EAAD,CAAqBE,KAAMA,KADrBA,EAAK4C,YCjE5B,SAASG,EAAWhD,GAC/B,IAAQiD,EAAejD,EAAfiD,IAAK3C,EAAUN,EAAVM,MACPJ,EAAU9D,IAGhB,OACQ,qBAAK8G,IAAKD,EAAKE,IAAK7C,EAAOE,UAAWN,EAAQ5D,MCF3C,SAAS8G,EAASpD,GAAsB,IAAD,EAC1CqD,EAASrD,EAATqD,KACFnD,EAAUvB,IAChB,OACI,qBAAK6B,UAAWN,EAAQrD,KAAxB,SACI,sBAAK2D,UAAWN,EAAQtB,UAAxB,UACI,qBAAK4B,UAAWN,EAAQ1B,aAAxB,SAAsC,cAACwE,EAAD,CAAYC,IAAKI,EAAKC,WAAYhD,MAAO+C,EAAK/C,UACpF,sBAAKE,UAAWN,EAAQlC,KAAxB,UACI,eAAC,WAAD,WACA,uCAAKqF,EAAK9C,YAAV,QAAkB,KAClB,+BAAO8C,EAAK/C,QACZ,6BAAK+C,EAAKE,WACV,6BAAKF,EAAKG,QACV,4BAAIH,EAAKI,SAIL,8BACI,iCAAOJ,EAAKK,UAAZ,iBADJ,SAC+C,iCAAOL,EAAKM,UAAZ,kBAE/C,mBAAGnD,UAAWN,EAAQ9C,KAAMwG,KAAMP,EAAKQ,SAAUC,IAAI,aAAalB,OAAO,SAAzE,8CCzBjB,IAAMmB,EAAkB1H,YAAgB,CAC3CQ,KAAK,CACD0C,WAAY,UACZvC,QAAS,WACTN,QAAS,OACToB,eAAgB,UAEpBc,UAAU,CACNlC,QAAS,OACTK,cAAe,MACfI,OAAQ,SACR,WAAW,CACPuB,WAAY,IAEhB,4BAA4B,CACxBY,MAAO,WAMN0E,EAAoB3H,YAAgB,CAC7CQ,KAAK,CACDyC,MAAM,OACN,UAAU,CACNA,MAAO,MACP5B,SAAU,OACVnB,aAAc,OACd0H,OAAQ,IACR1E,WAAY,YACZ2E,WAAY,YACZlH,QAAS,oBACT,6BAA6B,CACzBA,QAAS,oBAEb,iBAAiB,CACbE,MAAO,YACP6B,UAAW,SACXrB,SAAU,YAObyG,EAAe9H,YAAgB,CACxCQ,KAAK,CACDyC,MAAO,QACP/C,aAAc,OACd0H,OAAQ,OACRjH,QAAS,WACTkH,WAAY,YACZ,UAAU,CACN3E,WAAW,c,OC5CR,SAAS6E,EAAYpE,GAEhC,IAAMqE,EALC,IAAIC,gBAAgBC,cAAcC,QAMjCC,EAAgBzE,EAAhByE,YAER,EAA0BzC,mBAAS,IAAnC,mBAAOO,EAAP,KAAcmC,EAAd,KAeArC,qBAAU,WAAM,IAAD,EACXqC,EAAQ,UAACL,EAAMM,IAAI,eAAX,QAAsB,MAChC,IACF,IAAMzE,EAAU8D,IAEhB,OACI,qBAAKxD,UAAWN,EAAQrD,KAAxB,SACI,uBAAOgG,GAAG,QAAQ+B,YAAY,uBAAoBC,WAf1D,SAAkBC,GACA,UAAVA,EAAEC,KACW,KAAVxC,GACCyC,OAAOzB,SAAS0B,OAAhB,uBAAuC1C,EAAvC,aAYoEA,MAAOA,EAAOC,SApB1E,SAACC,GACjBiC,EAASjC,EAAMG,OAAOL,OACtBkC,EAAYhC,EAAMG,OAAOL,QAkB0F2C,KAAK,WCjCjH,SAASC,EAAanF,GACjC,IAAME,EAAUiE,IACRE,EAAUrE,EAAVqE,MAUR,OACQ,wBAAQ7D,UAAWN,EAAQrD,KAAMuI,QAV1B,WACE,KAAVf,GAGCW,OAAOzB,SAAS0B,OAAhB,uBAAuCZ,EAAvC,aAMkDa,KAAK,SAAvD,uBCdG,SAASG,IACpB,IAAMnF,EAAU6D,IAChB,EAA4B/B,mBAAS,IAArC,mBAAOwC,EAAP,KAAec,EAAf,KAKA,OACI,qBAAK9E,UAAWN,EAAQrD,KAAxB,SACI,sBAAK2D,UAAWN,EAAQtB,UAAxB,cAAoC,cAACwF,EAAD,CAAaK,YANtC,SAACc,GAChBD,EAAUC,MAMN,cAACJ,EAAD,CAAcd,MAAOG,S,qBCX1B,SAASG,EAAI1B,EAAauC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,IAAM,CACJC,OAAQ,MACR5C,IAAI,GAAD,OANW,yBAMX,YAAYA,GACfuC,KAAI,OAAEA,QAAF,IAAEA,IAAQ,OACfM,MAAK,SAACC,GACLL,EAAQK,EAASP,SAChB,SAACQ,GACFL,EAAOK,EAAMD,gBCHZ,SAASE,EAAS5C,GACrB,OAAOsB,EAAI,SAAD,OAAUtB,EAAV,WAOP,SAAS6C,EAAc7C,EAAcpD,EAAckG,GACtD,OAAOxB,EAAI,SAAD,OAAUtB,EAAV,YAAkBpD,EAAlB,YAA0BkG,I,YChBzB,SAASC,IAEpB,IAAMlG,EAAUkB,IAChB,EAAgBY,mBAAS,WAAlB9E,EAAP,oBAEA,OACI,qBAAKsD,UAAWN,EAAQrD,KAAxB,SACI,cAAC,eAAD,CAAcK,MAAOA,EAAOsE,KAAM,OCK/B,SAAS6E,EAAiBrG,GACrC,IAAQsG,EAAaC,cAAbD,SACAjD,EAASrD,EAATqD,KACFnD,EAAUtD,IAChB,EAAwBoF,qBAAxB,mBAAO/B,EAAP,KAAauG,EAAb,KACA,EAAkCxE,mBAAS,IAA3C,mBAAOyE,EAAP,KAAkBC,EAAlB,KACA,EAAoC1E,qBAApC,mBAAO2E,EAAP,KAAmBC,EAAnB,KAYA,OAVAvE,qBAAU,WAON,OFhBD,SAAiBgB,EAAcpD,GAClC,OAAO0E,EAAI,SAAD,OAAUtB,EAAV,YAAkBpD,IEUxB4G,CAAQxD,EAAMiD,GAAUR,KAAxB,uCAA6B,WAAOC,GAAP,SAAAlE,EAAA,6DACzB2E,EAAQT,GADiB,KAEzBW,EAFyB,SAENR,EAAc7C,EAAMiD,EAAU,aAFxB,8CAGzBM,EAHyB,UAGLV,EAAc7C,EAAMiD,EAAU,cAHzB,+EAA7B,uDAKO,YAAoB,KAC5B,SAEUQ,IAAT7G,EACO,cAACmG,EAAD,IAGH,sBAAK5F,UAAWN,EAAQrD,KAAxB,UACI,6BAAKoD,EAAKM,OACV,6BAAKN,EAAKQ,YACV,4BAAIR,EAAK8G,cACT,sBAAK5G,MAAO,CAACzD,QAAQ,QAAS2C,SAAU,YAAxC,UACI,sBAAKmB,UAAWN,EAAQvC,OAAxB,UACI,wDAAoBgJ,QAApB,IAAoBA,OAApB,EAAoBA,EAAY5D,OAAhC,kBADJ,OAGK4D,QAHL,IAGKA,OAHL,EAGKA,EAAY7D,KAAI,SAAAO,GACb,OACI,4BAAIA,EAAK/C,cAIrB,sBAAKE,UAAWN,EAAQvC,OAAxB,UAAgC,oDAC3BqJ,OAAOC,KAAKR,GAAW3D,KAAI,SAAApC,GACxB,OACI,4BAAIA,aAIpB,mBAAGF,UAAWN,EAAQzC,WAAYmG,KAAM3D,EAAK4D,SAAUC,IAAI,aAAalB,OAAO,SAA/E,iDACA,cAAC,IAAD,CAAMpC,UAAWN,EAAQ9C,KAAMgD,GAAE,gBAAWiD,GAA5C,0DC5CD,SAAS6D,IACpB,IAAMC,EAAWZ,cAAXY,OACN,EAA0BnF,oBAAS,GAAnC,mBAAOgE,EAAP,KAAcoB,EAAd,KACA,EAA0BpF,mBAAuB,IAAjD,mBAAOqF,EAAP,KAAcC,EAAd,KACA,EAA8BtF,qBAA9B,mBAAOuF,EAAP,KAAgBC,EAAhB,KACQC,EAASC,cAATD,KAaR,OAZApF,qBAAU,WHfP,IAAiBgB,KGgBT,OAAC8D,QAAD,IAACA,IAAU,GHffxC,EAAI,SAAD,OAAUtB,KGeMyC,KAAtB,uCAA2B,WAAOC,GAAP,eAAAlE,EAAA,6DACvB8F,QAAQC,IAAI7B,GACZyB,EAAWzB,GAFY,SAGFE,EAAQ,OAACkB,QAAD,IAACA,IAAU,IAHjB,OAGnBlF,EAHmB,OAIvBqF,EAASrF,GAJc,2CAA3B,uDAKG4F,OAAM,WACLT,GAAS,QAEd,SAGYN,IAAZS,EAEK,cAAC,WAAD,UAEI,cAACnB,EAAD,MAKJ,eAAC,WAAD,WACI,cAACf,EAAD,IACCW,EACD,cAAC3E,EAAD,CAAaC,QAAQ,iCAErB,eAAC,WAAD,WACI,cAAC8B,EAAD,CAAUC,KAAMkE,IAChB,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOO,OAAK,EAACL,KAAMA,EAAnB,SAAyB,cAAChG,EAAD,CAAgBC,aAAc2F,MACvD,cAAC,IAAD,CAAOI,KAAI,UAAKA,EAAL,cAAX,SAAkC,cAACpB,EAAD,CAAkBhD,KAAMkE,EAAQjH,qBCpD/E,SAASyH,IACpB,OACI,sBAAK5H,MAAO,CAAC1D,OAAQ,OAAQ6C,MAAO,OAAQ5C,QAAS,OAAQoB,eAAgB,SAAUK,WAAY,SAAUpB,cAAe,UAA5H,UACI,qBAAKmG,IAAI,uBAAuBC,IAAI,QACpC,mBAAGS,KAAK,IAAR,iCCDkBvH,YAAgB,IAAvC,IAGM2L,EAAa3L,YAAgB,CACtCQ,KAAK,CACDyC,MAAM,OACN7C,OAAQ,QACRC,QAAS,OACToB,eAAgB,SAChBK,WAAY,UAEhBS,UAAU,CACNlC,QAAS,OACTK,cAAe,SACfoB,WAAY,SACZ,4BAA4B,CACxBmB,MAAO,QAEX,QAAQ,CACJ9C,SAAU,IACVwC,aAAc,KAElB,WAAW,CACPxB,UAAW,OC1BR,MAA0B,iCCM1B,SAASyK,IACpB,IAAM/H,EAAW8H,IACjB,EAA4BhG,mBAAS,IAArC,mBAAOwC,EAAP,KAAec,EAAf,KAKA,OACI,qBAAK9E,UAAWN,EAAQrD,KAAxB,SACI,sBAAK2D,UAAWN,EAAQtB,UAAxB,UACI,qBAAKsE,IAAKgF,EAAM/E,IAAI,SACxB,cAACiB,EAAD,CAAaK,YARF,SAACc,GAChBD,EAAUC,MAQN,cAACJ,EAAD,CAAcd,MAAOG,SCVlB,SAAS2D,EAAcnI,GAClC,IAAQqD,EAASrD,EAATqD,KACFnD,EAAU5B,IAKhB,OACI,sBAAK8G,QALS,WACdJ,OAAOzB,SAAS0B,OAAhB,gBAAgC5B,EAAK/C,SAIZE,UAAWN,EAAQrD,KAA5C,UACI,qBAAK2D,UAAWN,EAAQ1B,aAAxB,SACI,cAACwE,EAAD,CAAY1C,MAAO+C,EAAK/C,MAAO2C,IAAKI,EAAKC,eAG7C,sBAAK9C,UAAWN,EAAQzB,cAAxB,UAAuC,6BAAK4E,EAAK/C,QAC7C,qCAAQ+C,EAAKR,YCPd,SAASuF,EAASpI,GAC7B,IAAQqI,EAAoDrI,EAApDqI,MAAOhE,EAA6CrE,EAA7CqE,MAAOiE,EAAsCtI,EAAtCsI,MAAOC,EAA+BvI,EAA/BuI,YAAaC,EAAkBxI,EAAlBwI,cAC1C,EAAgCxG,mBAAuB,IAAvD,mBAAOyG,EAAP,KAAiBC,EAAjB,KACA,EAA0B1G,mBAAS,GAAnC,mBAAO2G,EAAP,KAAcC,EAAd,KAEM1I,EAAUP,IAQhB,OANA0C,qBAAU,WACNqG,EAAYL,GACZ,IAAIQ,EAAcC,KAAKC,MAAMT,EAAM,IAAM,EACzCM,EAASC,KACV,CAACR,IAGA,sBAAK7H,UAAWN,EAAQhB,QAAxB,UACI,sBAAKsB,UAAWN,EAAQf,OAAxB,UACI,6DAAgCkF,KAChC,sBAAK7D,UAAWN,EAAQN,WAAxB,UACI,mBAAGwF,QAAS,kBAAMoD,EAAcD,EAAc,IAAI/H,UAA2B,IAAhB+H,EAAoBrI,EAAQL,YAAcK,EAAQJ,QAA/G,SAAyH,gBAD7H,IACgJ,mBAAGsF,QAAS,kBAAMoD,EAAcD,EAAc,IAAK/H,UAAW+H,GAAeI,EAAQzI,EAAQL,YAAcK,EAAQJ,QAAnH,SAA8H,wBAG7P,IAApB2I,EAAS1F,OACF,cAAC1B,EAAD,CAAaC,QAAQ,2CAEzB,qBAAKd,UAAWN,EAAQtB,UAAxB,SACK6J,EAAS3F,KAAI,SAAAO,GACV,OACI,qBAAmB7C,UAAWN,EAAQT,KAAtC,SACI,cAAC0I,EAAD,CAAe9E,KAAMA,KADfA,EAAKR,YC5B5B,SAASmG,IACpB,IAAM3E,EAJC,IAAIC,gBAAgBC,cAAcC,QAKzC,EAA0BxC,mBAAS,GAAnC,mBAAOsG,EAAP,KAAcW,EAAd,KACA,EAA8BjH,oBAAS,GAAvC,mBAAOkH,EAAP,KAAgBC,EAAhB,KACA,EAAgCnH,mBAAuB,IAAvD,mBAAOyG,EAAP,KAAiBC,EAAjB,KACA,EAAsC1G,mBAAwB,IAA9D,mBAAOoH,EAAP,KAAoBC,EAApB,KACA,EAAsCrH,mBAAS,GAA/C,mBAAOuG,EAAP,KAAoBe,EAApB,KAEAjH,qBAAU,WAAO,IAAD,EACRgB,EAAOgB,EAAMM,IAAI,QACjB4E,EAAI,UAAGC,OAAOnF,EAAMM,IAAI,gBAApB,QAAgC,EAC3B,OAATtB,GACAgG,EAAehG,GACfiG,EAAeC,GVzBpB,SAAqBE,EAAeF,GACvC,OAAO5E,EAAI,kBAAD,OAAmB8E,EAAnB,iBAAiCF,IUyBnCG,CAAYrG,EAAMkG,GAAMzD,MAAK,SAACC,GAC1B,IAAI4D,EAAO5D,EACX2C,EAAYiB,EAAKC,OACjBX,EAASU,EAAKE,aACdV,GAAW,GACXxB,QAAQC,IAAI+B,MACb9B,OAAM,SAAC7B,GACNmD,GAAW,OAGfnE,OAAOzB,SAAS0B,OAAhB,OAGL,IAMH,OACI,eAAC,WAAD,WACI,cAACI,EAAD,IACC6D,EACG,cAAC9C,EAAD,IAEQ,cAAC,WAAD,UAEQ,cAACgC,EAAD,CAAUI,cAAe,SAACe,GAAD,OAZlC,SAACA,GACjBvE,OAAOzB,SAAS0B,OAAhB,uBAAuCmE,EAAvC,iBAA2DG,IAWCO,CAAWP,IAAOlB,MAAOI,EAAUH,MAAOA,EAAOC,YAAaA,EAAalE,MAAOA,EAAMM,IAAI,eC/BhJoF,MAjBf,WAEE,OACE,cAAC,WAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOjC,OAAK,EAACL,KAAK,IAAlB,SAAsB,cAACQ,EAAD,MACtB,cAAC,IAAD,CAAOR,KAAI,gBAAX,SAA8B,cAACP,EAAD,MAC9B,cAAC,IAAD,CAAOY,OAAK,EAACL,KAAK,UAAlB,SAA4B,cAACuB,EAAD,MAC5B,cAAC,IAAD,UAAO,cAACjB,EAAD,cCFNiC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBpE,MAAK,YAAkD,IAA/CqE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a4017159.chunk.js","sourcesContent":["import {createUseStyles} from 'react-jss';\r\n\r\n\r\nexport const profilePictureStyles = createUseStyles({\r\n    img:{\r\n        borderRadius: 100,\r\n        maxWidth: \"100%\", \r\n        height: \"100%\", \r\n        display:\"block\",\r\n        objectFit: \"cover\"\r\n    },\r\n})\r\n\r\nexport const repositoryDetailStyles = createUseStyles({\r\n    root: {\r\n        display:\"flex\",\r\n        backgroundColor: \"#666\",\r\n        flexDirection: \"column\",\r\n        padding: 20,\r\n        boxShadow: \"10px 10px 18px -13px rgba(0,0,0,0.37)\",\r\n        color: \"white\",\r\n        margin: 20,\r\n        \"@media (min-width:1280px)\":{\r\n            maxWidth: 1200,\r\n            margin: \"20px auto\"\r\n        }\r\n    },\r\n    link:{\r\n        textDecoration: \"none\",\r\n        color: \"#FAFAFA\",\r\n        fontWeight: \"600\",\r\n        alignSelf: \"center\",\r\n        marginTop: 20\r\n    },\r\n    githubLink:{\r\n        textDecoration: \"none\",\r\n        color: \"#9D79BC\",\r\n        fontWeight: \"600\",\r\n        fontSize: \"1.3em\",\r\n        alignSelf: \"center\",\r\n    },\r\n    column:{\r\n        flexBasis: \"100%\",\r\n        margin: \"20px 0px\",\r\n        \"@media (min-width: 768px)\":{\r\n            flexBasis: \"50%\",\r\n        }\r\n    }\r\n    \r\n})\r\n\r\nexport const repositorySectionStyles = createUseStyles({\r\n    root: {\r\n        display:\"flex\",\r\n        backgroundColor: \"#666\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        padding: 20,\r\n        boxShadow: \"10px 10px 18px -13px rgba(0,0,0,0.37)\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n        \"&:hover\":{\r\n            backgroundColor:\"#777\"\r\n        },\r\n        \"&:active\":{\r\n            backgroundColor:\"#888\"\r\n        },\r\n    },\r\n    info:{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        wordBreak: \"break-all\",\r\n    },\r\n    right:{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"flex-end\",\r\n        '& div':{\r\n            margin: \"0px 10px\"\r\n        }\r\n    },\r\n    stat:{\r\n        display:\"flex\",\r\n        alignItems: \"center\",\r\n        '& span': {\r\n            marginRight: 5,\r\n        }\r\n    },\r\n})\r\n\r\nexport const  userCardStyles = createUseStyles({\r\n    root: {\r\n        maxHeight: 57,\r\n        display:\"flex\",\r\n        backgroundColor: \"#666\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-start\",\r\n        padding: 20,\r\n        boxShadow: \"10px 10px 18px -13px rgba(0,0,0,0.37)\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n        \"&:hover\":{\r\n            backgroundColor:\"#777\"\r\n        },\r\n        \"&:active\":{\r\n            backgroundColor:\"#888\"\r\n        },\r\n    },\r\n    imgContainer:{\r\n        maxHeight: \"100%\",\r\n        maxWidth: 57\r\n        \r\n    },\r\n    infoContainer:{\r\n        marginLeft: 20,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\"\r\n    }\r\n})\r\n \r\nexport const userInfoStyles = createUseStyles({\r\n    root:{\r\n        backgroundColor: \"#1F7A8C\"\r\n    },\r\n    container:{\r\n        display:\"flex\",\r\n        padding: 25,\r\n        maxWidth: \"1600px\",\r\n        margin: \"0 auto\",\r\n        position: \"relative\",\r\n        alignItems: \"center\",\r\n        flexWrap: \"wrap\",\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n        justifyContent: \"center\",\r\n        '@media(min-width: 426px)':{\r\n            textAlign: \"left\",\r\n            justifyContent:\"flex-start\"\r\n        },\r\n    },\r\n    info:{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"space-between\",\r\n        marginLeft:30,\r\n        \"& span\":{\r\n            marginBottom: 10,\r\n        }\r\n    },\r\n    imgContainer:{\r\n        maxWidth: 180,\r\n        maxHeight: 180,\r\n        \"& img\": {\r\n            height: \"auto\"\r\n        }\r\n    },\r\n    link:{\r\n        textDecoration: \"none\",\r\n        color: \"#C0F5FA\",\r\n        fontWeight: \"600\"\r\n    }\r\n})\r\n\r\nexport const repositoryGridClasses = createUseStyles({\r\n    wrapper:{\r\n        maxWidth: \"1080px\",\r\n        margin: \"50px auto 0 auto\",\r\n        color: \"white\",\r\n        '& h1' :{\r\n            color: \"white\",\r\n            marginBottom: 10,\r\n            marginLeft: 10,\r\n            '@media(max-width: 425px)':{\r\n                textAlign: \"center\"\r\n            }\r\n        }\r\n    },\r\n    header:{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        \"@media (min-width: 425px)\":{   \r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        }\r\n    }, \r\n    select:{\r\n        \"& select\":{\r\n            marginLeft:10\r\n        }\r\n    },\r\n    container:{\r\n        display: \"flex\",       \r\n        flexFlow: \"row wrap\",\r\n        justifyContent: \"flex-start\",\r\n        '&::-webkit-scrollbar': {\r\n            width: \"9px\",\r\n            height: \"9px\",\r\n          },\r\n          '&::-webkit-scrollbar-thumb': {\r\n            background: \"#bdbdbd\",\r\n            borderRadius: \"15px\",\r\n          },\r\n          '&::-webkit-scrollbar-thumb:hover': {\r\n            background: \"#adadad\",\r\n          },\r\n          '&::-webkit-scrollbar-track': {\r\n            background: \"#ffffff1a\",\r\n            borderRadius: \"15px\",\r\n          },\r\n          '@media(min-width: 425px)':{\r\n            maxHeight: \"55vh\",\r\n            overflow: \"hidden auto\",\r\n          }\r\n        \r\n    },\r\n    item:{\r\n        flexBasis: \"100%\",\r\n        \"-ms-flex\": \"auto\",\r\n        padding: \"10px\",\r\n        boxSizing: \"border-box\",\r\n        '@media(min-width: 1073px)':{\r\n            flexBasis: \"33.33%\",\r\n        },\r\n        '@media(min-width: 815px)':{\r\n            flexBasis: \"50%\",\r\n        }\r\n    },\r\n})\r\n\r\nexport const userGridClasses = createUseStyles({\r\n    wrapper:{\r\n        maxWidth: \"1080px\",\r\n        margin: \"50px auto 0 auto\",\r\n        color: \"white\",\r\n        '& h1' :{\r\n            color: \"white\",\r\n            marginBottom: 10,\r\n            marginLeft: 10,\r\n            '@media(max-width: 426px)':{\r\n                textAlign: \"center\"\r\n            }\r\n        }\r\n    },\r\n    header:{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        \"@media (min-width: 426px)\":{\r\n            justifyContent: \"space-between\",\r\n            flexDirection: \"row\",\r\n        },\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }, \r\n    select:{\r\n        \"& select\":{\r\n            marginLeft:10\r\n        }\r\n    },\r\n    container:{\r\n        display: \"flex\",       \r\n        flexFlow: \"row wrap\",\r\n        justifyContent: \"flex-start\",\r\n        '&::-webkit-scrollbar': {\r\n            width: \"9px\",\r\n            height: \"9px\",\r\n          },\r\n          '&::-webkit-scrollbar-thumb': {\r\n            background: \"#bdbdbd\",\r\n            borderRadius: \"15px\",\r\n          },\r\n          '&::-webkit-scrollbar-thumb:hover': {\r\n            background: \"#adadad\",\r\n          },\r\n          '&::-webkit-scrollbar-track': {\r\n            background: \"#ffffff1a\",\r\n            borderRadius: \"15px\",\r\n          },\r\n          '@media(min-width: 815px)':{\r\n            maxHeight: \"55vh\",\r\n            overflow: \"hidden auto\",\r\n          }\r\n        \r\n    },\r\n    item:{\r\n        flexBasis: \"100%\",\r\n        \"-ms-flex\": \"auto\",\r\n        padding: \"10px\",\r\n        boxSizing: \"border-box\",\r\n        width: \"100%\",\r\n        '@media(min-width: 1073px)':{\r\n            flexBasis: \"33.33%\",\r\n        },\r\n        '@media(min-width: 815px)':{\r\n            flexBasis: \"50%\",\r\n        }\r\n    },\r\n    pagination:{\r\n        display:\"flex\"\r\n    },\r\n    displayNone:{\r\n        display: \"none\",\r\n    },\r\n    paglink:{\r\n        display: \"block\", \r\n        cursor: \"pointer\", \r\n        margin: \"0px 5px\"\r\n    }\r\n});\r\n","import { Repository } from 'types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport { repositorySectionStyles } from '../styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface RepositoryProps {\r\n    repo: Repository;\r\n}\r\n\r\nexport default function RepositoryContainer(props: RepositoryProps) {\r\n    const { repo } = props;\r\n    const classes = repositorySectionStyles();\r\n\r\n    return (\r\n        <Link style={{textDecoration: \"none\"}} to={`/user/${repo.owner.login}/${repo.name}/`}>\r\n         <div  className={classes.root}>\r\n            <div className={classes.info}>\r\n                <h3>{repo.name}</h3>\r\n                <div>\r\n                <h5>{repo.full_name}</h5>\r\n                <h6>{repo.language}</h6>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={classes.right}>\r\n                <div className={classes.stat}>\r\n                    <span>{repo.watchers_count}</span>\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                </div>\r\n                <div className={classes.stat}>\r\n                    <span>{repo.stargazers_count}</span>\r\n                    <FontAwesomeIcon icon={faStar} />\r\n                </div>\r\n            </div>\r\n\r\n           \r\n        </div>\r\n        </Link>\r\n    )\r\n}","import { createUseStyles } from 'react-jss';\r\n\r\nexport const errorStyles = createUseStyles({\r\n\r\n    empty:{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        textAlign: \"center\",\r\n        minHeight: \"300px\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        color: \"white\",\r\n        '& svg': {\r\n            opacity: 0.4,\r\n        },\r\n        '& span':{\r\n            marginTop: 20,\r\n            opacity: 0.4,\r\n        }\r\n    }\r\n})\r\n\r\nexport const loadingStyles = createUseStyles({\r\n    root:{\r\n        width: \"100%\",\r\n        height: \"50vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n})","import { errorStyles } from \"./styles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSadCry } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface ErrorProps {\r\n    message: string\r\n}\r\n\r\nexport default function ReturnError(props: ErrorProps){\r\n\r\n    const { message } = props\r\n    const classes = errorStyles();\r\n    \r\n    return(\r\n        <div className={classes.empty}>\r\n              <FontAwesomeIcon icon={faSadCry} size=\"5x\" />\r\n              <span>{message}</span>\r\n          </div>\r\n    )\r\n}","import { Repository } from 'types';\r\nimport RepositoryContainer from './RepositoryContainer';\r\nimport { repositoryGridClasses } from 'components/user/styles'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport ReturnError from 'components/common/Error';\r\n\r\ninterface RepositoryGridProps {\r\n    repositories: Repository[];\r\n}\r\n\r\nexport default function RepositoryGrid(props: RepositoryGridProps) {\r\n    const { repositories } = props;\r\n    const orders = [\r\n        {\r\n            name: \"Mais favoritados\",\r\n            function: (a: Repository, b: Repository) => { return b.stargazers_count - a.stargazers_count }\r\n        },\r\n        {\r\n            name: \"Menos favoritados\",\r\n            function: (a: Repository, b: Repository) => { return a.stargazers_count - b.stargazers_count }\r\n        },\r\n        {\r\n            name: \"Mais observados\",\r\n            function: (a: Repository, b: Repository) => { return b.stargazers_count - a.stargazers_count }\r\n        },\r\n        {\r\n            name: \"Menos observados\",\r\n            function: (a: Repository, b: Repository) => { return a.stargazers_count - b.stargazers_count }\r\n        },\r\n        {\r\n            name: \"Nome\",\r\n            function: (a: Repository, b: Repository) => { return a.name.localeCompare(b.name) }\r\n        },\r\n\r\n    ]\r\n    \r\n    const [repoList, setRepoList] = useState<Repository[]>([]);\r\n    const [selectedOrder, setSelectedOrder] = useState(orders[0].name);\r\n    const classes = repositoryGridClasses();\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setRepoList(repositories.sort(orders.find(element => element.name === event.target.value)?.function));\r\n        setSelectedOrder(event.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setRepoList(repositories.sort(function (a, b) { return b.stargazers_count - a.stargazers_count }));\r\n    }, [repositories]);\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.header}>\r\n                <h1>Repositórios</h1>\r\n                <div className={classes.select}>Ordernar por: \r\n                    <select name=\"orderby\" value={selectedOrder} onChange={handleChange} id=\"orderby\">\r\n                        {orders.map((item) => {\r\n                        return (\r\n                            <option key={item.name} value={item.name}>{item.name}</option>\r\n                        )})}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            {repoList.length === 0 ?\r\n                <ReturnError message=\"O usuário não possui repositórios\" />\r\n                :\r\n                <div className={classes.container}>\r\n                    {repoList.map(repo => {\r\n                        return (\r\n                            <div key={repo.id} className={classes.item}>\r\n                                <RepositoryContainer repo={repo} />\r\n                            </div>\r\n\r\n                        )\r\n                    })}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}","import { ProfilePicture } from 'types';\r\nimport { profilePictureStyles } from '../styles';\r\n\r\n\r\nexport default function ProfilePic(props: ProfilePicture){\r\n    const { url, login } = props;\r\n    const classes = profilePictureStyles();\r\n\r\n\r\n    return (\r\n            <img src={url} alt={login} className={classes.img} />\r\n    )\r\n}","import { User } from 'types';\r\nimport ProfilePic from './Picture';\r\nimport { userInfoStyles } from '../styles';\r\nimport { Fragment } from 'react';\r\n\r\ninterface UserInfoProps {\r\n    user: User;\r\n}\r\nexport default function UserInfo(props: UserInfoProps){\r\n    const { user } = props;\r\n    const classes = userInfoStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.container}>\r\n                <div className={classes.imgContainer}><ProfilePic url={user.avatar_url} login={user.login} /></div>\r\n                <div className={classes.info}>\r\n                    <Fragment>\r\n                    <h1>{user.name ?? \"\"}</h1>\r\n                    <span>{user.login}</span>\r\n                    <h4>{user.location}</h4>\r\n                    <h4>{user.email}</h4>\r\n                    <p>{user.bio}</p>\r\n                    \r\n                    </Fragment>\r\n                   \r\n                        <p>\r\n                            <span>{user.followers} seguidores</span> · <span>{user.following} seguindo</span>\r\n                        </p>\r\n                        <a className={classes.link} href={user.html_url} rel=\"noreferrer\" target=\"_blank\">Visitar perfil no Github</a>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import {createUseStyles} from 'react-jss';\r\n\r\n\r\nexport const searchBarStyles = createUseStyles({\r\n    root:{\r\n        background: \"#5492A2\",\r\n        padding: \"15px 0px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    },\r\n    container:{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: \"0 10px\",\r\n        \"& button\":{\r\n            marginLeft: 20\r\n        },\r\n        '@media (min-width: 426px)':{\r\n            width: \"30vw\",\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const searchFieldStyles = createUseStyles({\r\n    root:{\r\n        width:\"100%\",\r\n        \"& input\":{\r\n            width: \"95%\",\r\n            fontSize: \"18px\",\r\n            borderRadius: \"20px\",\r\n            border: \"0\",\r\n            background: \"#ffffff77\",\r\n            fontFamily: \"Open Sans\",\r\n            padding: \"2px 10px 2px 10px\",\r\n            \"@media (min-width: 4266px)\":{\r\n                padding: \"2px 0px 2px 10px\",\r\n            },\r\n            \"&::placeholder\":{\r\n                color: \"#ffffff99\",\r\n                textAlign: \"center\",\r\n                fontSize: \"16px\",\r\n            }\r\n        }\r\n       \r\n    }\r\n})\r\n\r\nexport const buttonStyles = createUseStyles({\r\n    root:{\r\n        width: \"120px\",\r\n        borderRadius: \"20px\",\r\n        border: \"none\",\r\n        padding: \"5px 20px\",\r\n        fontFamily: 'Open Sans',\r\n        \"&:hover\":{\r\n            background:\"#d5d5d5\"\r\n        }\r\n    }\r\n})","import { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { searchFieldStyles } from './styles';\r\n\r\ninterface SearchProps {\r\n    fieldChange: (text: string) => void\r\n}\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n  }\r\n\r\nexport default function SearchField(props: SearchProps){\r\n    \r\n    const query = useQuery();\r\n    const { fieldChange } = props;\r\n\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleChange= (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValue(event.target.value);\r\n        fieldChange(event.target.value);\r\n    }\r\n\r\n    function keyPress(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (e.key === \"Enter\") {\r\n            if(value !== \"\"){\r\n                window.location.assign(`/search?user=${value}&page=1`);\r\n            }\r\n        }\r\n      }\r\n\r\n    useEffect(() =>{\r\n        setValue(query.get(\"user\") ?? \"\");\r\n    },[])\r\n    const classes = searchFieldStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <input id=\"field\" placeholder=\"Pesquisar usuário\" onKeyPress={keyPress} value={value} onChange={handleChange}  type=\"text\" />\r\n        </div>\r\n        )\r\n}","import { buttonStyles } from \"./styles\";\r\n\r\ninterface ButtonProps {\r\n    query: string\r\n}\r\n\r\nexport default function SearchButton(props: ButtonProps) {\r\n    const classes = buttonStyles();\r\n    const { query } = props\r\n    const search = () => {\r\n        if(query === \"\"){\r\n\r\n        }else{\r\n            window.location.assign(`/search?user=${query}&page=1`);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n            <button className={classes.root} onClick={search} type=\"button\">\r\n                Pesquisar\r\n            </button>\r\n    )\r\n} ","import { searchBarStyles } from './styles';\r\nimport SearchField from './field';\r\nimport SearchButton from './Button';\r\nimport { useState } from 'react';\r\n\r\nexport default function SearchBar() {\r\n    const classes = searchBarStyles();\r\n    const [search, setSearch] = useState(\"\");\r\n    const textChange = (text:string) => {\r\n        setSearch(text);\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.container}> <SearchField fieldChange={textChange}/>\r\n            <SearchButton query={search} /></div>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'; \r\n\r\nconst api: string = \"https://api.github.com\";\r\n\r\nexport function get(url: string, data?: Object) {\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      method: 'get',\r\n      url: `${api}/${url}`,\r\n      data: data ?? null,\r\n  }).then((response) => {\r\n      resolve(response.data);\r\n    }, (error) => {\r\n      reject(error.response);\r\n    });\r\n  });\r\n}","import { get } from './adapter'; \r\n\r\nexport function searchUsers(param: string, page:number) {\r\n    return get(`search/users?q=${param}&page=${page}`);\r\n}\r\n\r\nexport function getUser(user: string){\r\n    return get(`users/${user}`);\r\n}\r\n\r\nexport function getRepos(user: string){\r\n    return get(`users/${user}/repos`);\r\n}\r\n\r\nexport function getRepo(user: string, repo: string){\r\n    return get(`repos/${user}/${repo}`);\r\n}\r\n\r\nexport function getRepoDetail(user: string, repo: string, detail: string){\r\n    return get(`repos/${user}/${repo}/${detail}`);\r\n}","import { useState } from \"react\";\r\nimport { PacmanLoader } from \"react-spinners\";\r\nimport { loadingStyles } from './styles';\r\nexport default function Loading(){\r\n\r\n    const classes = loadingStyles();\r\n    const [color] = useState(\"#1F7A8C\");\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <PacmanLoader color={color} size={30} />\r\n        </div>\r\n        \r\n    )\r\n}","import { Link, useParams } from \"react-router-dom\";\r\nimport { repositoryDetailStyles } from \"components/user/styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getRepo, getRepoDetail } from \"services/requests\";\r\nimport { Repository, UserSearch } from \"types\";\r\nimport Loading from \"components/common/Loading\";\r\n\r\ninterface RepositoryParams {\r\n    repoName: string\r\n}\r\n\r\ninterface RepositoryProps {\r\n    user: string\r\n}\r\n\r\nexport default function RepositoryDetail(props: RepositoryProps) {\r\n    const { repoName } = useParams<RepositoryParams>();\r\n    const { user } = props;\r\n    const classes = repositoryDetailStyles();\r\n    const [repo, setRepo] = useState<Repository>();\r\n    const [languages, setLanguages] = useState({});\r\n    const [stargazers, setStargazers] = useState<UserSearch[]>();\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        getRepo(user, repoName).then(async (response) => {\r\n            setRepo(response as Repository);\r\n            setLanguages(await getRepoDetail(user, repoName, \"languages\") as Object);;\r\n            setStargazers(await getRepoDetail(user, repoName, \"stargazers\") as UserSearch[]);\r\n        });\r\n        return () => { isMounted = false }\r\n    }, [])\r\n\r\n    if (repo === undefined) {\r\n        return <Loading />;\r\n    } else {\r\n        return (\r\n            <div className={classes.root}>\r\n                <h1>{repo.name}</h1>\r\n                <h3>{repo.full_name}</h3>\r\n                <p>{repo.description}</p>\r\n                <div style={{display:\" flex\", flexFlow: \"row wrap\",}}>\r\n                    <div className={classes.column}>\r\n                        <h4>Favoritado por {stargazers?.length} usuários</h4>\r\n\r\n                        {stargazers?.map(user => {\r\n                            return (\r\n                                <p>{user.login}</p>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div className={classes.column}><h4>Linguagens usadas:</h4>\r\n                        {Object.keys(languages).map(language => {\r\n                            return (\r\n                                <p>{language}</p>\r\n                            )\r\n                        })}</div>\r\n                </div>  \r\n                <a className={classes.githubLink} href={repo.html_url} rel=\"noreferrer\" target=\"_blank\">Visitar página do repositório</a>\r\n                <Link className={classes.link} to={`/user/${user}`}>Voltar para repositórios do usuário</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Fragment, useEffect, useState } from \"react\"\r\nimport RepositoryGrid from 'components/user/repository/RepositoryGrid';\r\nimport UserInfo from 'components/user/info/Info';\r\nimport SearchBar from 'components/search/Bar';\r\nimport { getUser, getRepos } from \"services/requests\";\r\nimport { Route, BrowserRouter as Router, Switch, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport ReturnError from 'components/common/Error'; \r\nimport { Repository, User } from \"types\";\r\nimport  RepositoryDetail from \"components/user/repository/RepositoryDetail\";\r\nimport Loading from 'components/common/Loading';\r\n\r\ninterface ProfileParams{\r\n    userId: string\r\n}\r\n\r\nexport default function Profile(){\r\n    let { userId } = useParams<ProfileParams>();\r\n    const [error, setError] = useState(false);\r\n    const [repos, setRepos] = useState<Repository[]>([])\r\n    const [profile, setProfile] = useState<User>();\r\n    const { path } = useRouteMatch();\r\n    useEffect(()=>{\r\n        getUser(userId ?? \"\").then(async (response) =>{\r\n            console.log(response);\r\n            setProfile(response as User);\r\n            let repoList = await getRepos(userId ?? \"\");\r\n            setRepos(repoList as Repository[]);\r\n        }).catch(() => {\r\n            setError(true);\r\n        });\r\n    }, []);\r\n\r\n\r\n    if(profile === undefined){\r\n        return (\r\n            <Fragment>\r\n                \r\n                <Loading />\r\n            </Fragment>\r\n        )\r\n    }else{\r\n        return(\r\n            <Fragment>\r\n                <SearchBar />\r\n                {error ? \r\n                <ReturnError message=\"Usuário não encontrado\" />\r\n          :\r\n                <Fragment>\r\n                    <UserInfo user={profile} />\r\n                    <Router>\r\n                        <Switch>\r\n                            <Route exact path={path}><RepositoryGrid repositories={repos} /></Route>\r\n                            <Route path={`${path}/:repoName`}><RepositoryDetail user={profile.login} /></Route>\r\n                        </Switch>\r\n                    </Router>\r\n                    \r\n                </Fragment>\r\n          }\r\n            </Fragment>\r\n        )\r\n    }\r\n}","export default function NotFound() {\r\n    return (\r\n        <div style={{height: \"100%\", width: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", flexDirection: \"column\" }}>\r\n            <img src=\"https://http.cat/404\" alt=\"404\" />\r\n            <a href=\"/\">Voltar para home</a>\r\n        </div>\r\n    )\r\n}","import {createUseStyles} from 'react-jss';\r\n\r\n\r\nexport const userPageStyles = createUseStyles({\r\n})\r\n\r\nexport const homeStyles = createUseStyles({\r\n    root:{\r\n        width:\"100%\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    container:{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        '@media (min-width: 426px)':{\r\n            width: \"30vw\",\r\n        },\r\n        \"& img\":{\r\n            maxWidth: 250,\r\n            marginBottom: 100\r\n        },\r\n        \"& button\":{\r\n            marginTop: 20,\r\n        }\r\n    },\r\n\r\n})\r\n","export default __webpack_public_path__ + \"static/media/logo.4932472c.png\";","import { useState } from 'react';\r\nimport SearchField from 'components/search/field';\r\nimport { homeStyles } from './styles';\r\nimport logo from 'assets/img/logo.png';\r\nimport SearchButton from 'components/search/Button';\r\n\r\nexport default function Home(){\r\n    const classes =  homeStyles();\r\n    const [search, setSearch] = useState(\"\");\r\n    const textChange = (text:string) => {\r\n        setSearch(text);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.container}>\r\n                <img src={logo} alt=\"logo\" />\r\n            <SearchField fieldChange={textChange}/>\r\n            <SearchButton query={search} />\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}","import { UserSearch } from 'types';\r\nimport ProfilePic from '../info/Picture';\r\nimport { userCardStyles } from '../styles';\r\n\r\ninterface UserCardProps {\r\n    user: UserSearch;\r\n}\r\n\r\nexport default function CardContainer(props: UserCardProps) {\r\n    const { user } = props;\r\n    const classes = userCardStyles();\r\n    const clickUser = () => {\r\n        window.location.assign(`/user/${user.login}`);\r\n    }\r\n\r\n    return (\r\n        <div onClick={clickUser} className={classes.root}>\r\n            <div className={classes.imgContainer}>\r\n                <ProfilePic login={user.login} url={user.avatar_url} />\r\n            </div>\r\n\r\n            <div className={classes.infoContainer}><h3>{user.login}</h3>\r\n                <p>ID: {user.id}</p></div>\r\n        </div>\r\n    )\r\n}","import { UserSearch } from 'types';\r\nimport CardContainer from './CardContainer';\r\nimport { userGridClasses } from 'components/user/styles'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport ReturnError from 'components/common/Error';\r\n\r\ninterface UserSearchProps {\r\n    users: UserSearch[];\r\n    query: string | null;\r\n    count: number;\r\n    currentPage: number;\r\n    getTargetPage: (number: number) => void;\r\n}\r\n\r\nexport default function UserGrid(props: UserSearchProps) {\r\n    const { users, query, count, currentPage, getTargetPage } = props;\r\n    const [userList, setUserList] = useState<UserSearch[]>([]);\r\n    const [pages, setPages] = useState(0);\r\n\r\n    const classes = userGridClasses();\r\n\r\n    useEffect(() => {\r\n        setUserList(users);\r\n        let numberPages = Math.trunc(count/30) + 1;\r\n        setPages(numberPages);\r\n    }, [users]);\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.header}>\r\n                <h1>Resultados da pesquisa por {query}</h1>\r\n                <div className={classes.pagination}>\r\n                    <a onClick={() => getTargetPage(currentPage - 1)} className={currentPage === 1 ? classes.displayNone : classes.paglink}>{\"<< Anterior\"}</a> <a onClick={() => getTargetPage(currentPage + 1)}  className={currentPage >= pages ? classes.displayNone : classes.paglink} >{\"Próxima >>\"}</a>\r\n                </div>\r\n            </div>\r\n            {userList.length === 0 ?\r\n                    <ReturnError message=\"A pesquisa não encontrou resultados\" />\r\n                :\r\n                <div className={classes.container}>\r\n                    {userList.map(user => {\r\n                        return (\r\n                            <div key={user.id} className={classes.item}>\r\n                                <CardContainer user={user} />\r\n                            </div>\r\n\r\n                        )\r\n                    })}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}","import { useLocation } from 'react-router-dom'\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { searchUsers } from 'services/requests';\r\nimport SearchBar from 'components/search/Bar';\r\nimport ReturnError from 'components/common/Error';\r\nimport UserGrid from 'components/user/card/CardGrid';\r\nimport { UserSearch, UserSearchResponse } from 'types';\r\nimport Home from './Home';\r\nimport Loading from 'components/common/Loading';\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function Search() {\r\n    const query = useQuery();\r\n    const [count, setCount] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [userList, setUserList] = useState<UserSearch[]>([]);\r\n    const [currentUser, setCurrentUser] = useState<string | null>(\"\");\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let user = query.get(\"user\");\r\n        let page = Number(query.get(\"page\")) ?? 1;\r\n        if (user !== null) {\r\n            setCurrentUser(user);\r\n            setCurrentPage(page);\r\n            searchUsers(user, page).then((response) => {\r\n                let resp = response as UserSearchResponse;\r\n                setUserList(resp.items);\r\n                setCount(resp.total_count);\r\n                setLoading(false);\r\n                console.log(resp);\r\n            }).catch((error) => {\r\n                setLoading(false);\r\n            });\r\n        } else {\r\n            window.location.assign(`/`)\r\n            \r\n        }\r\n    }, []);\r\n\r\n    const TargetPage = (page: number) => {\r\n       window.location.assign(`/search?user=${currentUser}&page=${page}`)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <SearchBar /> \r\n            {loading ?\r\n                <Loading />\r\n                :\r\n                        <Fragment>\r\n                            \r\n                                <UserGrid getTargetPage={(page) => TargetPage(page)} users={userList} count={count} currentPage={currentPage} query={query.get(\"user\")} />\r\n                        </Fragment>\r\n            }\r\n        </Fragment>\r\n\r\n    )\r\n}","import Profile from 'pages/Profile';\nimport NotFound from 'pages/NotFound';\nimport Home from 'pages/Home';\nimport Search from 'pages/Search'\nimport { Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nfunction App() {\n\n  return (\n    <Fragment>\n        <Router>\n            <Switch>\n              <Route exact path=\"/\"><Home /></Route>\n              <Route path={`/user/:userId`}><Profile /></Route>\n              <Route exact path=\"/search\"><Search /></Route>\n              <Route><NotFound /></Route>\n            </Switch>\n        </Router>\n    </Fragment>\n      \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}